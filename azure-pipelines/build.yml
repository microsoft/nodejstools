# 'Allow scripts to access the OAuth token' was selected in pipeline.  Add the following YAML to any steps requiring access:
#       env:
#           MY_ACCESS_TOKEN: $(System.AccessToken)
# ❎Variable 'Codeql.Enabled' was defined in the Variables tab
# ✅Variable 'DropRoot' was defined in the Variables tab
# ❎Variable 'NugetSecurityAnalysisWarningLevel' was defined in the Variables tab
# ❎Variable 'Packaging.EnableSBOMSigning' was defined in the Variables tab
# ✅Variable 'SignType' was defined in the Variables tab
# ❎Variable 'System.Debug' was defined in the Variables tab
# ✅Variable 'TeamName' was defined in the Variables tab
# ✅Cron Schedules have been converted using UTC Time Zone and may need to be updated for your location

# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# The SBOM tasks have been removed because they are not required for the unofficial template.
# You can manually enable SBOM in the unofficial template if needed, othewise its automatically enabled when using official template. https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/sbom
# This pipeline will be extended to the OneESPT template
# If you are not using the E+D shared hosted pool with windows-2022, replace the pool section with your hosted pool, os, and image name. If you are using a Linux image, you must specify an additional windows image for SDL: https://eng.ms/docs/cloud-ai-platform/devdiv/one-engineering-system-1es/1es-docs/1es-pipeline-templates/features/sdlanalysis/overview#how-to-specify-a-windows-pool-for-the-sdl-source-analysis-stage
# The Task 'PublishBuildArtifacts@1' has been converted to an output named 'Publish Artifact: raw' in the templateContext section.
# The Task 'PublishBuildArtifacts@1' has been converted to an output named 'Publish Symbols Artifact' in the templateContext section.

trigger: none

schedules:
- cron: 0 16 * * 2
  branches:
    include:
    - main

name: $(Date:yyyyMMdd)$(Rev:.r)

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main
  # - repository: NodeJsTools
  #   type: github
  #   endpoint: microsoft-nodejstools
  #   name: microsoft/nodejstools
  #   ref: main
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release

parameters:
- name: signType
  type: string
  default: test
  values:
  - test
  - real
- name: BuildConfiguration
  type: string
  default: Release

variables:
- name: DropRoot
  value: '\\cpvsbuild\drops\nodejstools\build\'
- name: TeamName
  value: nodejstools
# - name: Codeql.Enabled
#   value: true
# - name: NugetSecurityAnalysisWarningLevel
#   value: warn
# - name: Packaging.EnableSBOMSigning
#   value: True
# - name: System.Debug
#   value: True
extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: VSEngSS-MicroBuild2022-1ES
    sdl:
      # sourceRepositoriesToScan:
      #   exclude:
      #   - repository: NodeJsTools
      binskim:
        scanOutputDirectoryOnly: true
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: stage
      jobs:
      - job: Phase_1
        displayName: Phase 1
        timeoutInMinutes: 600
        cancelTimeoutInMinutes: 1
        templateContext:
          outputParentDirectory: '$(Build.ArtifactStagingDirectory)'
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Artifact: raw'
            targetPath: $(Build.ArtifactStagingDirectory)\raw
            artifactName: raw
          - output: pipelineArtifact
            displayName: 'Publish Symbols Artifact'
            targetPath: $(Build.ArtifactStagingDirectory)\symbols
            artifactName: Symbols
          - output: microBuildVstsDrop
            displayName: Upload VSTS Drop
            dropFolder: $(Build.ArtifactStagingDirectory)\vsdrop
            accessToken: $(System.AccessToken)
            dropServiceUri: https://devdiv.artifacts.visualstudio.com/DefaultCollection
            vsDropServiceUri: https://vsdrop.corp.microsoft.com/file/v1

        steps:
        - checkout: NodeJsTools
          fetchTags: false
          persistCredentials: True

        - task: MicroBuildSigningPlugin@4
          name: MicroBuildSigningPlugin_1
          displayName: Install Signing Plugin`
          inputs:
            signType: ${{ parameters.signType }}
            zipSources: false

        - task: MicroBuildLocalizationPlugin@4
          name: MicroBuildLocalizationPlugin_2
          displayName: Install Localization Plugin

        - task: MicroBuildSwixPlugin@4
          name: MicroBuildSwixPlugin_3
          displayName: Install Swix Plugin

        - task: DeleteFiles@1
          name: DeleteFiles_4
          displayName: Delete files from BuildOutput
          continueOnError: True
          inputs:
            SourceFolder: $(Build.SourcesDirectory)\BuildOutput\
            Contents: '**'
        - task: NuGetAuthenticate@1
          displayName: NuGet Authenticate

        - task: NuGetToolInstaller@1
          displayName: Use NuGet 5.x
          inputs:
            versionSpec: 5.x

        - task: NuGetCommand@2
          name: NuGetInstaller_6
          displayName: NuGet restore for solution
          inputs:
            solution: Nodejs/NodejsTools.sln
            selectOrConfig: config
            nugetConfigPath: nuget.config

        - task: VSBuild@1
          name: VSBuild_7
          displayName: Build solution Nodejs/NodejsTools.sln
          inputs:
            solution: Nodejs/NodejsTools.sln
            msbuildArgs: /p:SourceLinkCreate=true
            configuration: ${{ parameters.BuildConfiguration }}
            clean: true
            maximumCpuCount: true
            logProjectEvents: false

        - task: CopyFiles@2
          displayName: Flatten Binary Output for SBOM
          inputs:
            SourceFolder: $(Build.SourcesDirectory)\BuildOutput\${{parameters.BuildConfiguration}}\Binaries
            TargetFolder: $(Build.ArtifactStagingDirectory)\sbom
            CleanTargetFolder: true
            OverWrite: true
            flattenFolders: true

        - task: VSBuild@1
          displayName: Build solution Setup
          inputs:
            solution: Nodejs/Setup/NodejsSetup.sln
            msbuildArgs: /p:SourceLinkCreate=true
            configuration: ${{ parameters.BuildConfiguration }}
            clean: true
            logProjectEvents: false

        - task: CopyFiles@2
          displayName: Collect Symbols
          inputs:
            SourceFolder: $(Build.SourcesDirectory)\BuildOutput\${{ parameters.BuildConfiguration }}
            Contents: >-
              Binaries\**\Microsoft.NodejsTools?(*.exe|*.pdb|*.dll)

              Binaries\**\Microsoft.JavaScript.TestAdapter?(*.pdb|*.dll)

              Binaries\**\MigrateToJsps?(*.exe|*.pdb|*.dll)
            TargetFolder: $(Build.ArtifactStagingDirectory)\symbols

        - task: CopyFiles@2
          name: CopyFiles_10
          displayName: Copy setup files to vsdrop folder
          inputs:
            SourceFolder: $(Build.SourcesDirectory)\BuildOutput\${{ parameters.BuildConfiguration }}\Setup
            Contents: '**\?(*.vsix|*.json|*.vsman|*.nupkg|*sbom.json)'
            TargetFolder: '$(Build.ArtifactStagingDirectory)\vsdrop'
            CleanTargetFolder: true
            OverWrite: true
            flattenFolders: true

        - task: MicroBuildCodesignVerify@3
          name: MicroBuildCodesignVerify1
          displayName: Verify Signed Files
          inputs:
            TargetFolders: '$(Build.ArtifactStagingDirectory)\vsdrop'
            ApprovalListPathForCerts: signWhiteList.txt

        - task: CopyFiles@2
          name: CopyFiles_9
          displayName: Copy binaries and nupkg to raw folder
          inputs:
            SourceFolder: $(Build.SourcesDirectory)\BuildOutput\${{ parameters.BuildConfiguration }}
            Contents: >-
              Binaries\**\Microsoft.NodejsTools?(*.exe|*.pdb|*.dll)

              Binaries\**\localize\** Binaries\**\Microsoft.JavaScript.TestAdapter?(*.pdb|*.dll)

              Setup\**\Microsoft.JavaScript.UnitTest.*.nupkg
            TargetFolder: '$(Build.ArtifactStagingDirectory)\raw'
            CleanTargetFolder: true

        - task: CopyFiles@2
          displayName: Copy SBOM files to Raw
          inputs:
            SourceFolder: $(Build.ArtifactStagingDirectory)\sbom
            Contents: _manifest\**\*.json
            TargetFolder: '$(Build.ArtifactStagingDirectory)\raw'

        - task: PublishSymbols@2
          displayName: Index Sources and Publish Symbols
          inputs:
            SymbolsFolder: $(Build.ArtifactStagingDirectory)\symbols
            SearchPattern: >-
              **\*.pdb

              **\*.dll
            SymbolServerType: TeamServices
            TreatNotIndexedAsWarning: true

        # - task: MicroBuildUploadVstsDropFolder@1
        #   name: MicroBuildUploadVstsDropFolder_12
        #   displayName: Upload VSTS Drop
        #   inputs:
        #     DropFolder: $(Build.ArtifactStagingDirectory)\vsdrop
        #     AccessToken: $(System.AccessToken)
        #     DropServiceUri: https://devdiv.artifacts.visualstudio.com/DefaultCollection

        - task: MicroBuildCleanup@1
          name: MicroBuildCleanup_14
          displayName: Perform Cleanup Tasks