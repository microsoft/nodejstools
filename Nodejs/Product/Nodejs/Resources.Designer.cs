//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.NodejsTools {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.NodejsTools.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Working Dir.
        /// </summary>
        internal static string BrowseWorkingDirDialogTitle {
            get {
                return ResourceManager.GetString("BrowseWorkingDirDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not clear Node.js cache directory. Try manually deleting the directory: {0}.
        /// </summary>
        internal static string CacheDirectoryClearFailedCaption {
            get {
                return ResourceManager.GetString("CacheDirectoryClearFailedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could Not Clear Node.js Cache Directory.
        /// </summary>
        internal static string CacheDirectoryClearFailedTitle {
            get {
                return ResourceManager.GetString("CacheDirectoryClearFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading published package list....
        /// </summary>
        internal static string CatalogLoadingDefault {
            get {
                return ResourceManager.GetString("CatalogLoadingDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status.
        /// </summary>
        internal static string CategoryStatus {
            get {
                return ResourceManager.GetString("CategoryStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        internal static string CategoryVersion {
            get {
                return ResourceManager.GetString("CategoryVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Black.
        /// </summary>
        internal static string ClassificationBlack {
            get {
                return ResourceManager.GetString("ClassificationBlack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Blue.
        /// </summary>
        internal static string ClassificationBlue {
            get {
                return ResourceManager.GetString("ClassificationBlue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Cyan.
        /// </summary>
        internal static string ClassificationCyan {
            get {
                return ResourceManager.GetString("ClassificationCyan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Dark Blue.
        /// </summary>
        internal static string ClassificationDarkBlue {
            get {
                return ResourceManager.GetString("ClassificationDarkBlue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Dark Cyan.
        /// </summary>
        internal static string ClassificationDarkCyan {
            get {
                return ResourceManager.GetString("ClassificationDarkCyan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Dark Gray.
        /// </summary>
        internal static string ClassificationDarkGray {
            get {
                return ResourceManager.GetString("ClassificationDarkGray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Dark Green.
        /// </summary>
        internal static string ClassificationDarkGreen {
            get {
                return ResourceManager.GetString("ClassificationDarkGreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Dark Magenta.
        /// </summary>
        internal static string ClassificationDarkMagenta {
            get {
                return ResourceManager.GetString("ClassificationDarkMagenta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Dark Red.
        /// </summary>
        internal static string ClassificationDarkRed {
            get {
                return ResourceManager.GetString("ClassificationDarkRed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Dark Yellow.
        /// </summary>
        internal static string ClassificationDarkYellow {
            get {
                return ResourceManager.GetString("ClassificationDarkYellow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Error.
        /// </summary>
        internal static string ClassificationError {
            get {
                return ResourceManager.GetString("ClassificationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Gray.
        /// </summary>
        internal static string ClassificationGray {
            get {
                return ResourceManager.GetString("ClassificationGray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Green.
        /// </summary>
        internal static string ClassificationGreen {
            get {
                return ResourceManager.GetString("ClassificationGreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Magenta.
        /// </summary>
        internal static string ClassificationMagenta {
            get {
                return ResourceManager.GetString("ClassificationMagenta", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Red.
        /// </summary>
        internal static string ClassificationRed {
            get {
                return ResourceManager.GetString("ClassificationRed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - White.
        /// </summary>
        internal static string ClassificationWhite {
            get {
                return ResourceManager.GetString("ClassificationWhite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive - Yellow.
        /// </summary>
        internal static string ClassificationYellow {
            get {
                return ResourceManager.GetString("ClassificationYellow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure project properties.
        /// </summary>
        internal static string ConfigureProjectProperties {
            get {
                return ResourceManager.GetString("ConfigureProjectProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select a startup file to launch by right-clicking the file in Solution Explorer and selecting &apos;Set as Node.js Startup File&apos; or by modifying your configuration in project properties.
        /// </summary>
        internal static string DebugCouldNotResolveStartupFileErrorMessage {
            get {
                return ResourceManager.GetString("DebugCouldNotResolveStartupFileErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows attaching to Node.js processes running behind a remote debug proxy (RemoteDebug.js). Related documentation can be found under the &apos;Tools\Node.js Tool\Remote Debug Proxy&apos; menu. Specify the target hostname and debugger port in the &apos;Qualifier&apos; textbox, e.g. &apos;targethost: {0}&apos;. This transport is not secure, and should not be used on a network that might have hostile traffic..
        /// </summary>
        internal static string DebuggerAttachToDescription {
            get {
                return ResourceManager.GetString("DebuggerAttachToDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugger connection was closed..
        /// </summary>
        internal static string DebuggerConnectionClosed {
            get {
                return ResourceManager.GetString("DebuggerConnectionClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to update file contents..
        /// </summary>
        internal static string DebuggerModuleUpdateFailed {
            get {
                return ResourceManager.GetString("DebuggerModuleUpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the port used to communicate with the debugger.
        /// </summary>
        internal static string DebuggerPort {
            get {
                return ResourceManager.GetString("DebuggerPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interpreter &quot;{0}&quot; does not exist..
        /// </summary>
        internal static string DebugInterpreterDoesNotExistErrorMessage {
            get {
                return ResourceManager.GetString("DebugInterpreterDoesNotExistErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This TypeScript project has &apos;Combine Javascript output into file&apos; option enabled. This option is not supported by NTVS debugger, and may result in erratic behavior of breakpoints, stepping, and debug tool windows. Are you sure you want to start debugging?.
        /// </summary>
        internal static string DebugTypeScriptCombineNotSupportedWarningMessage {
            get {
                return ResourceManager.GetString("DebugTypeScriptCombineNotSupportedWarningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working directory &quot;{0}&quot; does not exist..
        /// </summary>
        internal static string DebugWorkingDirectoryDoesNotExistErrorMessage {
            get {
                return ResourceManager.GetString("DebugWorkingDirectoryDoesNotExistErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to bundled.
        /// </summary>
        internal static string DependencyNodeLabelBundled {
            get {
                return ResourceManager.GetString("DependencyNodeLabelBundled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to missing.
        /// </summary>
        internal static string DependencyNodeLabelMissing {
            get {
                return ResourceManager.GetString("DependencyNodeLabelMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to not listed in {0}.
        /// </summary>
        internal static string DependencyNodeLabelNotListed {
            get {
                return ResourceManager.GetString("DependencyNodeLabelNotListed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path to module does not exist:
        ///{0}.
        /// </summary>
        internal static string DependencyNodeModuleDoesNotExist {
            get {
                return ResourceManager.GetString("DependencyNodeModuleDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Node.js.
        /// </summary>
        internal static string DownloadNodejs {
            get {
                return ResourceManager.GetString("DownloadNodejs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies environment variables to be set in the spawned process in the form:
        ///
        ///NAME1=value1
        ///NAME2=value2
        ///....
        /// </summary>
        internal static string EnvironmentVariables {
            get {
                return ResourceManager.GetString("EnvironmentVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugging Node 7 and below is not supported. Current Node version is {0}..
        /// </summary>
        internal static string ErrorDebuggingNode7NotSupported {
            get {
                return ResourceManager.GetString("ErrorDebuggingNode7NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch url &apos;{0}&apos; is not valid .
        /// </summary>
        internal static string ErrorInvalidLaunchUrl {
            get {
                return ResourceManager.GetString("ErrorInvalidLaunchUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing npm command.
        /// </summary>
        internal static string ExecutingNpmCommandMessage {
            get {
                return ResourceManager.GetString("ExecutingNpmCommandMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some file paths could not be accessed.{0}Try moving your source code to a location where you can read and write files..
        /// </summary>
        internal static string ImportingProjectAccessErrorStatusText {
            get {
                return ResourceManager.GetString("ImportingProjectAccessErrorStatusText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred and your project was not created..
        /// </summary>
        internal static string ImportingProjectErrorStatusText {
            get {
                return ResourceManager.GetString("ImportingProjectErrorStatusText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing project....
        /// </summary>
        internal static string ImportingProjectStatusText {
            get {
                return ResourceManager.GetString("ImportingProjectStatusText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unexpected error {0} occurred while creating your project..
        /// </summary>
        internal static string ImportingProjectUnexpectedErrorMessage {
            get {
                return ResourceManager.GetString("ImportingProjectUnexpectedErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do nothing (recommended).
        /// </summary>
        internal static string IncludeNodeModulesCancelTitle {
            get {
                return ResourceManager.GetString("IncludeNodeModulesCancelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Including &apos;node_modules&apos; in your project is generally unnecessary, and may reduce Visual Studio&apos;s performance. You can continue to use and deploy packages from &apos;node_modules&apos; without including it in your project..
        /// </summary>
        internal static string IncludeNodeModulesContent {
            get {
                return ResourceManager.GetString("IncludeNodeModulesContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This may be a long-running operation, during which Visual Studio will be unusable..
        /// </summary>
        internal static string IncludeNodeModulesIncludeDescription {
            get {
                return ResourceManager.GetString("IncludeNodeModulesIncludeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include &apos;node_modules&apos; folder in project.
        /// </summary>
        internal static string IncludeNodeModulesIncludeTitle {
            get {
                return ResourceManager.GetString("IncludeNodeModulesIncludeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;a href=&quot;http://go.microsoft.com/fwlink/?LinkID=518083&quot;&gt;More Information&lt;/a&gt;.
        /// </summary>
        internal static string IncludeNodeModulesInformation {
            get {
                return ResourceManager.GetString("IncludeNodeModulesInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to start interactive process: {0}{1}{2}.
        /// </summary>
        internal static string InteractiveWindowFailedToStartProcessErrorMessage {
            get {
                return ResourceManager.GetString("InteractiveWindowFailedToStartProcessErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current interactive window is disconnected - please reset the process..
        /// </summary>
        internal static string InteractiveWindowNoProcessErrorMessage {
            get {
                return ResourceManager.GetString("InteractiveWindowNoProcessErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process has exited.
        /// </summary>
        internal static string InteractiveWindowProcessExitedMessage {
            get {
                return ResourceManager.GetString("InteractiveWindowProcessExitedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Interactive Window.
        /// </summary>
        internal static string InteractiveWindowTitle {
            get {
                return ResourceManager.GetString("InteractiveWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid port number - the port should contain only digits..
        /// </summary>
        internal static string InvalidPortNumber {
            get {
                return ResourceManager.GetString("InvalidPortNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the URL to open in the browser.  If unspecified http://localhost:port is used.\r\nIf a port is specified, it needs to be specified here as well..
        /// </summary>
        internal static string LaunchUrlToolTip {
            get {
                return ResourceManager.GetString("LaunchUrlToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not applicable for sub-packages..
        /// </summary>
        internal static string LinkStatusNotApplicableSubPackages {
            get {
                return ResourceManager.GetString("LinkStatusNotApplicableSubPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string LinkStatusUnknown {
            get {
                return ResourceManager.GetString("LinkStatusUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.exe options.
        /// </summary>
        internal static string NodeExeArguments {
            get {
                return ResourceManager.GetString("NodeExeArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the options provided to node.exe, such as -e or -i..
        /// </summary>
        internal static string NodeExeArgumentsDescription {
            get {
                return ResourceManager.GetString("NodeExeArgumentsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the options provided to node.exe, such as -e or -i..
        /// </summary>
        internal static string NodeExeArgumentsToolTip {
            get {
                return ResourceManager.GetString("NodeExeArgumentsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your project is currently configured to look for Node.exe at &quot;{0}&quot; but the file does not exist..
        /// </summary>
        internal static string NodeExeDoesntExist {
            get {
                return ResourceManager.GetString("NodeExeDoesntExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.exe path.
        /// </summary>
        internal static string NodeExePath {
            get {
                return ResourceManager.GetString("NodeExePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the path to the node.exe executable..
        /// </summary>
        internal static string NodeExePathDescription {
            get {
                return ResourceManager.GetString("NodeExePathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified Node.js interpreter does not exist..
        /// </summary>
        internal static string NodeExePathNotFound {
            get {
                return ResourceManager.GetString("NodeExePathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the path to the node.exe executable..
        /// </summary>
        internal static string NodeExePathToolTip {
            get {
                return ResourceManager.GetString("NodeExePathToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.
        /// </summary>
        internal static string NodeHeader {
            get {
                return ResourceManager.GetString("NodeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a Node.js runtime on your computer.  Please download and install the current Node.js release from https://nodejs.org, or specify the location of your Node.exe in the Visual Studio Node Project&apos;s properties page..
        /// </summary>
        internal static string NodejsNotInstalled {
            get {
                return ResourceManager.GetString("NodejsNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a Node.js runtime on your computer.  Please download and install the current Node.js release from &apos;https://nodejs.org&apos;, or specify the location of your Node.exe in the &apos;{0}&apos; file..
        /// </summary>
        internal static string NodejsNotInstalledAnyCode {
            get {
                return ResourceManager.GetString("NodejsNotInstalledAnyCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a Node.js runtime on your computer. Please install Node.js and restart VS, or specify the location of node.exe in the project properties page..
        /// </summary>
        internal static string NodejsNotInstalledInfoBar {
            get {
                return ResourceManager.GetString("NodejsNotInstalledInfoBar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js has not been detected on your computer.
        /// </summary>
        internal static string NodejsNotInstalledShort {
            get {
                return ResourceManager.GetString("NodejsNotInstalledShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This version of Node.js ({0}) is not supported. Please upgrade to Node.js v0.10.20 or later..
        /// </summary>
        internal static string NodejsNotSupported {
            get {
                return ResourceManager.GetString("NodejsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application port.
        /// </summary>
        internal static string NodejsPort {
            get {
                return ResourceManager.GetString("NodejsPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the port number used for process.env.port, if unspecified a random port is generated..
        /// </summary>
        internal static string NodejsPortDescription {
            get {
                return ResourceManager.GetString("NodejsPortDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the port number used for process.env.port, if unspecified a random port is generated..
        /// </summary>
        internal static string NodejsPortToolTip {
            get {
                return ResourceManager.GetString("NodejsPortToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Tools for Visual Studio.
        /// </summary>
        internal static string NodejsToolsForVisualStudio {
            get {
                return ResourceManager.GetString("NodejsToolsForVisualStudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to parse {0} from your project.  Please fix any errors and try again..
        /// </summary>
        internal static string NodeModulesCouldNotParsePackageJsonErrorMessageText {
            get {
                return ResourceManager.GetString("NodeModulesCouldNotParsePackageJsonErrorMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (This package has no keywords.).
        /// </summary>
        internal static string NoKeywordsInPackage {
            get {
                return ResourceManager.GetString("NoKeywordsInPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executes npm command. If solution contains multiple projects, specify target project using .npm [ProjectName] &lt;npm arguments&gt;.
        /// </summary>
        internal static string NpmExecuteCommand {
            get {
                return ResourceManager.GetString("NpmExecuteCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debugging could not be started because npm is installing packages. Please wait until npm finishes and try again..
        /// </summary>
        internal static string NpmIsInstalling {
            get {
                return ResourceManager.GetString("NpmIsInstalling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Installations.
        /// </summary>
        internal static string NpmNodePackageInstallation {
            get {
                return ResourceManager.GetString("NpmNodePackageInstallation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether the node manages local or global npm package installations..
        /// </summary>
        internal static string NpmNodePackageInstallationDescription {
            get {
                return ResourceManager.GetString("NpmNodePackageInstallationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        internal static string NpmNodePath {
            get {
                return ResourceManager.GetString("NpmNodePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Base path in which npm packages are installed..
        /// </summary>
        internal static string NpmNodePathDescription {
            get {
                return ResourceManager.GetString("NpmNodePathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to npm Not Installed.
        /// </summary>
        internal static string NpmNotInstalledMessageCaption {
            get {
                return ResourceManager.GetString("NpmNotInstalledMessageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find npm.cmd. Ensure you have a recent version of node.js installed and have specified the location of node.exe in the project properties, or that it is available on your system PATH.
        ///
        ///The following error occurred trying to execute npm.cmd:
        ///
        ///{0}.
        /// </summary>
        internal static string NpmNotInstalledMessageText {
            get {
                return ResourceManager.GetString("NpmNotInstalledMessageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author.
        /// </summary>
        internal static string NpmPackageAuthor {
            get {
                return ResourceManager.GetString("NpmPackageAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary or original author of package; there may also be additional contributors..
        /// </summary>
        internal static string NpmPackageAuthorDescription {
            get {
                return ResourceManager.GetString("NpmPackageAuthorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        internal static string NpmPackageDescription {
            get {
                return ResourceManager.GetString("NpmPackageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package description..
        /// </summary>
        internal static string NpmPackageDescriptionDescription {
            get {
                return ResourceManager.GetString("NpmPackageDescriptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (enter arguments above).
        /// </summary>
        internal static string NpmPackageInstallHelpMessage {
            get {
                return ResourceManager.GetString("NpmPackageInstallHelpMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bundled Dependency.
        /// </summary>
        internal static string NpmPackageIsBundledDependency {
            get {
                return ResourceManager.GetString("NpmPackageIsBundledDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether or not the package is a bundled dependency..
        /// </summary>
        internal static string NpmPackageIsBundledDependencyDescription {
            get {
                return ResourceManager.GetString("NpmPackageIsBundledDependencyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dev Dependency.
        /// </summary>
        internal static string NpmPackageIsDevDependency {
            get {
                return ResourceManager.GetString("NpmPackageIsDevDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether or not the package is a development dependency..
        /// </summary>
        internal static string NpmPackageIsDevDependencyDescription {
            get {
                return ResourceManager.GetString("NpmPackageIsDevDependencyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Listed As Dependency.
        /// </summary>
        internal static string NpmPackageIsListedInParentPackageJson {
            get {
                return ResourceManager.GetString("NpmPackageIsListedInParentPackageJson", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether or not the package is listed as a package.json dependency..
        /// </summary>
        internal static string NpmPackageIsListedInParentPackageJsonDescription {
            get {
                return ResourceManager.GetString("NpmPackageIsListedInParentPackageJsonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing.
        /// </summary>
        internal static string NpmPackageIsMissing {
            get {
                return ResourceManager.GetString("NpmPackageIsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether or not the package is a missing dependency..
        /// </summary>
        internal static string NpmPackageIsMissingDescription {
            get {
                return ResourceManager.GetString("NpmPackageIsMissingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional Dependency.
        /// </summary>
        internal static string NpmPackageIsOptionalDependency {
            get {
                return ResourceManager.GetString("NpmPackageIsOptionalDependency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether or not the package is an optional dependency..
        /// </summary>
        internal static string NpmPackageIsOptionalDependencyDescription {
            get {
                return ResourceManager.GetString("NpmPackageIsOptionalDependencyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keywords.
        /// </summary>
        internal static string NpmPackageKeywords {
            get {
                return ResourceManager.GetString("NpmPackageKeywords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package keywords..
        /// </summary>
        internal static string NpmPackageKeywordsDescription {
            get {
                return ResourceManager.GetString("NpmPackageKeywordsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link Status.
        /// </summary>
        internal static string NpmPackageLinkStatus {
            get {
                return ResourceManager.GetString("NpmPackageLinkStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether a package has been linked from globally installed packages..
        /// </summary>
        internal static string NpmPackageLinkStatusDescription {
            get {
                return ResourceManager.GetString("NpmPackageLinkStatusDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Name.
        /// </summary>
        internal static string NpmPackageName {
            get {
                return ResourceManager.GetString("NpmPackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of package, as specified in its package.json..
        /// </summary>
        internal static string NpmPackageNameDescription {
            get {
                return ResourceManager.GetString("NpmPackageNameDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Newer Version Available.
        /// </summary>
        internal static string NpmPackageNewVersionAvailable {
            get {
                return ResourceManager.GetString("NpmPackageNewVersionAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether or not a newer version of the package is available..
        /// </summary>
        internal static string NpmPackageNewVersionAvailableDescription {
            get {
                return ResourceManager.GetString("NpmPackageNewVersionAvailableDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path.
        /// </summary>
        internal static string NpmPackagePath {
            get {
                return ResourceManager.GetString("NpmPackagePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location of package on disk..
        /// </summary>
        internal static string NpmPackagePathDescription {
            get {
                return ResourceManager.GetString("NpmPackagePathDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requested Version.
        /// </summary>
        internal static string NpmPackageRequestedVersionRange {
            get {
                return ResourceManager.GetString("NpmPackageRequestedVersionRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version of package requested in package.json belonging to parent package or project..
        /// </summary>
        internal static string NpmPackageRequestedVersionRangeDescription {
            get {
                return ResourceManager.GetString("NpmPackageRequestedVersionRangeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Type.
        /// </summary>
        internal static string NpmPackageType {
            get {
                return ResourceManager.GetString("NpmPackageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether package is global, or locally installed in your project, and whether or not it is a sub-package..
        /// </summary>
        internal static string NpmPackageTypeDescription {
            get {
                return ResourceManager.GetString("NpmPackageTypeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        internal static string NpmPackageVersion {
            get {
                return ResourceManager.GetString("NpmPackageVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed version of package..
        /// </summary>
        internal static string NpmPackageVersionDescription {
            get {
                return ResourceManager.GetString("NpmPackageVersionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} completed with errors.
        /// </summary>
        internal static string NpmReplCommandCompletedWithErrors {
            get {
                return ResourceManager.GetString("NpmReplCommandCompletedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a valid Node.js project or project directory. If your solution contains multiple projects, specify a target project using .npm [ProjectName or ProjectDir] &lt;npm arguments&gt; For example: .npm [MyApp] list..
        /// </summary>
        internal static string NpmSpecifyValidProject {
            get {
                return ResourceManager.GetString("NpmSpecifyValidProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Errors Encountered ({1}) - Executing: {0}.
        /// </summary>
        internal static string NpmStatusExecutingErrors {
            get {
                return ResourceManager.GetString("NpmStatusExecutingErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Executing: {0} ({1} command(s) queued).
        /// </summary>
        internal static string NpmStatusExecutingQueued {
            get {
                return ResourceManager.GetString("NpmStatusExecutingQueued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Errors Encountered ({2}) - Executing: {0} ({1} command(s) queued).
        /// </summary>
        internal static string NpmStatusExecutingQueuedErrors {
            get {
                return ResourceManager.GetString("NpmStatusExecutingQueuedErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready.
        /// </summary>
        internal static string NpmStatusReady {
            get {
                return ResourceManager.GetString("NpmStatusReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready - Command(s) completed with errors ({0}).
        /// </summary>
        internal static string NpmStatusReadyWithErrors {
            get {
                return ResourceManager.GetString("NpmStatusReadyWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} successfully completed.
        /// </summary>
        internal static string NpmSuccessfullyCompleted {
            get {
                return ResourceManager.GetString("NpmSuccessfullyCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Today at {0:t}.
        /// </summary>
        internal static string PackageCatalogRefresh0Days {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh0Days", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yesterday at {0:t}.
        /// </summary>
        internal static string PackageCatalogRefresh1Day {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh1Day", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 1 month ago.
        /// </summary>
        internal static string PackageCatalogRefresh1Month {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh1Month", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 1 week ago.
        /// </summary>
        internal static string PackageCatalogRefresh1Week {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh1Week", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} days ago.
        /// </summary>
        internal static string PackageCatalogRefresh2To7Days {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh2To7Days", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 2 weeks ago.
        /// </summary>
        internal static string PackageCatalogRefresh2Weeks {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh2Weeks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 3 months ago.
        /// </summary>
        internal static string PackageCatalogRefresh3Months {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh3Months", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More than 3 weeks ago.
        /// </summary>
        internal static string PackageCatalogRefresh3Weeks {
            get {
                return ResourceManager.GetString("PackageCatalogRefresh3Weeks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh failed - see output below for details.
        /// </summary>
        internal static string PackageCatalogRefreshFailed {
            get {
                return ResourceManager.GetString("PackageCatalogRefreshFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently refreshing.
        /// </summary>
        internal static string PackageCatalogRefreshing {
            get {
                return ResourceManager.GetString("PackageCatalogRefreshing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local.
        /// </summary>
        internal static string PackageInstallationLocal {
            get {
                return ResourceManager.GetString("PackageInstallationLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package.json not checked out.
        /// </summary>
        internal static string PackageJsonNotCheckedOutCaption {
            get {
                return ResourceManager.GetString("PackageJsonNotCheckedOutCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to check out &apos;package.json&apos;. Please ensure the file is checked out, before adding or removing NPM packages..
        /// </summary>
        internal static string PackageJsonNotCheckedOutMessage {
            get {
                return ResourceManager.GetString("PackageJsonNotCheckedOutMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local.
        /// </summary>
        internal static string PackageTypeLocal {
            get {
                return ResourceManager.GetString("PackageTypeLocal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local sub-package.
        /// </summary>
        internal static string PackageTypeLocalSubpackage {
            get {
                return ResourceManager.GetString("PackageTypeLocalSubpackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for working directory.
        /// </summary>
        internal static string PropertiesBrowseDirectoryAccessibleName {
            get {
                return ResourceManager.GetString("PropertiesBrowseDirectoryAccessibleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for node.exe.
        /// </summary>
        internal static string PropertiesBrowsePathAccessibleName {
            get {
                return ResourceManager.GetString("PropertiesBrowsePathAccessibleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for test root.
        /// </summary>
        internal static string PropertiesBrowseTestRootAccessibleName {
            get {
                return ResourceManager.GetString("PropertiesBrowseTestRootAccessibleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Package Properties.
        /// </summary>
        internal static string PropertiesClassLocalPackage {
            get {
                return ResourceManager.GetString("PropertiesClassLocalPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local Sub-Package Properties.
        /// </summary>
        internal static string PropertiesClassLocalSubPackage {
            get {
                return ResourceManager.GetString("PropertiesClassLocalSubPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to npm Packages Properties.
        /// </summary>
        internal static string PropertiesClassNpm {
            get {
                return ResourceManager.GetString("PropertiesClassNpm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Debugger port:.
        /// </summary>
        internal static string PropertiesDebuggerPort {
            get {
                return ResourceManager.GetString("PropertiesDebuggerPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Environment &amp;Variables:.
        /// </summary>
        internal static string PropertiesEnvVars {
            get {
                return ResourceManager.GetString("PropertiesEnvVars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch &amp;URL:.
        /// </summary>
        internal static string PropertiesLaunchUrl {
            get {
                return ResourceManager.GetString("PropertiesLaunchUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to N&amp;ode.exe options:.
        /// </summary>
        internal static string PropertiesNodeExeOptions {
            get {
                return ResourceManager.GetString("PropertiesNodeExeOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.exe &amp;path:.
        /// </summary>
        internal static string PropertiesNodeExePath {
            get {
                return ResourceManager.GetString("PropertiesNodeExePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applica&amp;tion port:.
        /// </summary>
        internal static string PropertiesNodePort {
            get {
                return ResourceManager.GetString("PropertiesNodePort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Script (startup file):.
        /// </summary>
        internal static string PropertiesScript {
            get {
                return ResourceManager.GetString("PropertiesScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script ar&amp;guments:.
        /// </summary>
        internal static string PropertiesScriptArgs {
            get {
                return ResourceManager.GetString("PropertiesScriptArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sta&amp;rt web browser on launch.
        /// </summary>
        internal static string PropertiesStartBrowser {
            get {
                return ResourceManager.GetString("PropertiesStartBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working director&amp;y:.
        /// </summary>
        internal static string PropertiesWorkingDir {
            get {
                return ResourceManager.GetString("PropertiesWorkingDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure that the process is running behind the remote debug proxy (RemoteDebug.js), and the debugger port (default {0}) is open on the target host..
        /// </summary>
        internal static string RemoteDebugCheckProxyAndPortErrorMessage {
            get {
                return ResourceManager.GetString("RemoteDebugCheckProxyAndPortErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not attach to Node.js process at {0}{1}
        ///
        ///.
        /// </summary>
        internal static string RemoteDebugCouldNotAttachErrorMessage {
            get {
                return ResourceManager.GetString("RemoteDebugCouldNotAttachErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make sure that the Azure web site is deployed in the Debug configuration, and web sockets are enabled for it in the Azure management portal..
        /// </summary>
        internal static string RemoteDebugEnableWebSocketsErrorMessage {
            get {
                return ResourceManager.GetString("RemoteDebugEnableWebSocketsErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote Debug Proxy &quot;{0}&quot; does not exist..
        /// </summary>
        internal static string RemoteDebugProxyFileDoesNotExist {
            get {
                return ResourceManager.GetString("RemoteDebugProxyFileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find RemoteDebugProxyFolder.
        /// </summary>
        internal static string RemoteDebugProxyFolderDoesNotExist {
            get {
                return ResourceManager.GetString("RemoteDebugProxyFolderDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remote debugging of node.js Microsoft Azure applications is only supported on Windows 8 and above..
        /// </summary>
        internal static string RemoteDebugUnsupportedPlatformErrorMessage {
            get {
                return ResourceManager.GetString("RemoteDebugUnsupportedPlatformErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resets the context object to an empty object and clears any multi-line expression..
        /// </summary>
        internal static string ReplClearDescription {
            get {
                return ResourceManager.GetString("ReplClearDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show information about the current used Node.js executable..
        /// </summary>
        internal static string ReplInfoDescription {
            get {
                return ResourceManager.GetString("ReplInfoDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js interactive window. Type .help for a list of commands..
        /// </summary>
        internal static string ReplInitializationMessage {
            get {
                return ResourceManager.GetString("ReplInitializationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to retrieve Nodejs.exe information..
        /// </summary>
        internal static string ReplNodeError {
            get {
                return ResourceManager.GetString("ReplNodeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using Node.js exe from: &apos;{0}&apos;.
        /// </summary>
        internal static string ReplNodeInfo {
            get {
                return ResourceManager.GetString("ReplNodeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Version: {0}.
        /// </summary>
        internal static string ReplNodeVersion {
            get {
                return ResourceManager.GetString("ReplNodeVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save the current REPL session to a file..
        /// </summary>
        internal static string ReplSaveDescription {
            get {
                return ResourceManager.GetString("ReplSaveDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to save: &apos;{0}&apos;..
        /// </summary>
        internal static string ReplSaveFailed {
            get {
                return ResourceManager.GetString("ReplSaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid filename: &apos;{0}&apos;..
        /// </summary>
        internal static string ReplSaveInvalidFileName {
            get {
                return ResourceManager.GetString("ReplSaveInvalidFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save requires a filename..
        /// </summary>
        internal static string ReplSaveNoFileName {
            get {
                return ResourceManager.GetString("ReplSaveNoFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Session saved to: &apos;{0}&apos;..
        /// </summary>
        internal static string ReplSaveSucces {
            get {
                return ResourceManager.GetString("ReplSaveSucces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please run &apos;.npm init -y&apos; to create a new package.json file..
        /// </summary>
        internal static string ReplWindowNpmInitNoYesFlagWarning {
            get {
                return ResourceManager.GetString("ReplWindowNpmInitNoYesFlagWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        internal static string RequestedVersionRangeNone {
            get {
                return ResourceManager.GetString("RequestedVersionRangeNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When checked the Node.js specific properties are saved per user.
        /// </summary>
        internal static string SaveInProjectFileToolTip {
            get {
                return ResourceManager.GetString("SaveInProjectFileToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Apply Node.js settings to all users (save in project file).
        /// </summary>
        internal static string SaveNodeSettingsInProjectFile {
            get {
                return ResourceManager.GetString("SaveNodeSettingsInProjectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the arguments passed to the script on launch..
        /// </summary>
        internal static string ScriptArgumentsToolTip {
            get {
                return ResourceManager.GetString("ScriptArgumentsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the script run on launch..
        /// </summary>
        internal static string ScriptFileTooltip {
            get {
                return ResourceManager.GetString("ScriptFileTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Action.
        /// </summary>
        internal static string StartActionHeader {
            get {
                return ResourceManager.GetString("StartActionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When checked a web browser is opened on launch.
        /// </summary>
        internal static string StartBrowserToolTip {
            get {
                return ResourceManager.GetString("StartBrowserToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js code analysis is up to date, analyzed {0:N0} function(s) in {1}.
        /// </summary>
        internal static string StatusAnalysisUpToDate {
            get {
                return ResourceManager.GetString("StatusAnalysisUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js IntelliSense typings folder is up to date.
        /// </summary>
        internal static string StatusTypingsLoaded {
            get {
                return ResourceManager.GetString("StatusTypingsLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading Node.js IntelliSense typings for npm packages....
        /// </summary>
        internal static string StatusTypingsLoading {
            get {
                return ResourceManager.GetString("StatusTypingsLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Framework.
        /// </summary>
        internal static string TestFramework {
            get {
                return ResourceManager.GetString("TestFramework", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the test framework this file applies to..
        /// </summary>
        internal static string TestFrameworkDescription {
            get {
                return ResourceManager.GetString("TestFrameworkDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the framework used for the unit tests..
        /// </summary>
        internal static string TestFrameworkToolTip {
            get {
                return ResourceManager.GetString("TestFrameworkToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test Root.
        /// </summary>
        internal static string TestRoot {
            get {
                return ResourceManager.GetString("TestRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the directory where the unit tests are located..
        /// </summary>
        internal static string TestRootToolTip {
            get {
                return ResourceManager.GetString("TestRootToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build Canceled.
        /// </summary>
        internal static string TscBuildCanceled {
            get {
                return ResourceManager.GetString("TscBuildCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build Completed.
        /// </summary>
        internal static string TscBuildCompleted {
            get {
                return ResourceManager.GetString("TscBuildCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error - Failed to start &apos;{0}&apos;.
        /// </summary>
        internal static string TscBuildError {
            get {
                return ResourceManager.GetString("TscBuildError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build Started.
        /// </summary>
        internal static string TscBuildStarted {
            get {
                return ResourceManager.GetString("TscBuildStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Node.js Tools requires TypeScript for Visual Studio {0} or higher. Please ensure TypeScript is installed.
        /// </summary>
        internal static string TypeScriptMinVersionNotInstalled {
            get {
                return ResourceManager.GetString("TypeScriptMinVersionNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JavaScript Unit Test.
        /// </summary>
        internal static string UnitTestHeader {
            get {
                return ResourceManager.GetString("UnitTestHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replaced &lt;EnvironmentVariables&gt; property with &lt;Environment&gt;. This project will no longer work with NTVS 1.0 beta 2 or below..
        /// </summary>
        internal static string UpgradedEnvironmentVariables {
            get {
                return ResourceManager.GetString("UpgradedEnvironmentVariables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Visual Studio.
        /// </summary>
        internal static string WarningDialogCaption {
            get {
                return ResourceManager.GetString("WarningDialogCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified working directory is invalid or missing..
        /// </summary>
        internal static string WorkingDirInvalidOrMissing {
            get {
                return ResourceManager.GetString("WorkingDirInvalidOrMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the working directory where the node.exe process is launched..
        /// </summary>
        internal static string WorkingDirToolTip {
            get {
                return ResourceManager.GetString("WorkingDirToolTip", resourceCulture);
            }
        }
    }
}
