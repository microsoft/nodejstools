<?xml version='1.0' encoding='UTF-8'?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FailedToBuild" xml:space="preserve">
    <value>無法建置專案，仍要啟動分析嗎?</value>
  </data>
  <data name="FailedToOpenFileErrorMessageText" xml:space="preserve">
    <value>無法開啟檔案 {0}</value>
  </data>
  <data name="NoConfiguredStatupFileErrorMessageText" xml:space="preserve">
    <value>專案沒有已設定的啟動檔案，無法開始分析。</value>
  </data>
  <data name="NodejsToolsForVS" xml:space="preserve">
    <value>Node.js Tools for Visual Studio</value>
  </data>
  <data name="NoProfilingConfiguredMessageCaption" xml:space="preserve">
    <value>無分析目標</value>
  </data>
  <data name="NoProfilingConfiguredMessageText" xml:space="preserve">
    <value>分析工作階段未設定 - 是否要立即設定並啟動?</value>
  </data>
  <data name="ProfilingOk" xml:space="preserve">
    <value>確定(_O)</value>
  </data>
  <data name="ProfilingStart" xml:space="preserve">
    <value>啟動(_S)</value>
  </data>
  <data name="ProjectNotFoundErrorMessageText" xml:space="preserve">
    <value>目前的解決方案中找不到專案。</value>
  </data>
  <data name="FailedToReadPerformanceSessionMessageText" xml:space="preserve">
    <value>無法讀取效能工作階段 {0}</value>
  </data>
  <data name="FailedToSaveV8LogMessageText" xml:space="preserve">
    <value>v8 記錄檔未成功儲存至:
{0}

沒有可用的分析資料。</value>
  </data>
  <data name="PerformanceReportNoLongerExistsMessageText" xml:space="preserve">
    <value>效能報告已不存在: {0}</value>
  </data>
  <data name="UnableToDeleteV8Log" xml:space="preserve">
    <value>無法刪除 &apos;{0}&apos;。

可能有第二份 node.exe 複本正在執行，且結果可能無法取得或錯誤。</value>
  </data>
  <data name="BaselineFileLabel" xml:space="preserve">
    <value>基準檔案(_B):</value>
  </data>
  <data name="CancelButtonContent" xml:space="preserve">
    <value>取消(_C)</value>
  </data>
  <data name="CommandLineArgumentsLabel" xml:space="preserve">
    <value>命令列引數(_A):</value>
  </data>
  <data name="CompareWindowTitle" xml:space="preserve">
    <value>選取分析檔案進行比對</value>
  </data>
  <data name="ComparisionFileLabel" xml:space="preserve">
    <value>分析檔案(_M):</value>
  </data>
  <data name="NodePathLabel" xml:space="preserve">
    <value>節點路徑(_N):</value>
  </data>
  <data name="OkButtonContent" xml:space="preserve">
    <value>確定(_O)</value>
  </data>
  <data name="OpenProjectButton" xml:space="preserve">
    <value>開啟專案(_O)</value>
  </data>
  <data name="ProfilingSettingsHeader" xml:space="preserve">
    <value>您想分析什麼項目呢?</value>
  </data>
  <data name="ProfilingSettingsTitle" xml:space="preserve">
    <value>分析設定</value>
  </data>
  <data name="ScriptLabel" xml:space="preserve">
    <value>指令碼(_R):</value>
  </data>
  <data name="StandaloneScriptLabel" xml:space="preserve">
    <value>獨立式指令碼(_T)</value>
  </data>
  <data name="WorkingDirectoryLabel" xml:space="preserve">
    <value>工作目錄(_W):</value>
  </data>
</root>
