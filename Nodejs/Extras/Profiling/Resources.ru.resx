<?xml version='1.0' encoding='UTF-8'?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FailedToBuild" xml:space="preserve">
    <value>Не удалось собрать проект. Все равно запустить профилирование?</value>
  </data>
  <data name="FailedToOpenFileErrorMessageText" xml:space="preserve">
    <value>Не удалось открыть файл {0}</value>
  </data>
  <data name="NoConfiguredStatupFileErrorMessageText" xml:space="preserve">
    <value>Невозможно запустить профилирование, так как не настроен файл запуска проекта.</value>
  </data>
  <data name="NodejsToolsForVS" xml:space="preserve">
    <value>Инструменты Node.js для Visual Studio</value>
  </data>
  <data name="NoProfilingConfiguredMessageCaption" xml:space="preserve">
    <value>Отсутствует цель профилирования.</value>
  </data>
  <data name="NoProfilingConfiguredMessageText" xml:space="preserve">
    <value>Сеанс профилирования не настроен — настроить его сейчас и затем запустить?</value>
  </data>
  <data name="ProfilingOk" xml:space="preserve">
    <value>_OK</value>
  </data>
  <data name="ProfilingStart" xml:space="preserve">
    <value>_Запустить</value>
  </data>
  <data name="ProjectNotFoundErrorMessageText" xml:space="preserve">
    <value>Не удалось найти проект в текущем решении.</value>
  </data>
  <data name="FailedToReadPerformanceSessionMessageText" xml:space="preserve">
    <value>Не удалось считать сеанс производительности {0}</value>
  </data>
  <data name="FailedToSaveV8LogMessageText" xml:space="preserve">
    <value>Файл журнала версии 8 успешно сохранен:
{0}

Данные для профилирования недоступны.</value>
  </data>
  <data name="PerformanceReportNoLongerExistsMessageText" xml:space="preserve">
    <value>Отчет производительности более не существует: {0}</value>
  </data>
  <data name="UnableToDeleteV8Log" xml:space="preserve">
    <value>Не удалось удалить &quot;{0}&quot;.

Возможно, запущена вторая копия node.exe,
поэтому результаты могут быть неправильны или недоступны.</value>
  </data>
  <data name="BaselineFileLabel" xml:space="preserve">
    <value>_Файл базовых показателей:</value>
  </data>
  <data name="CancelButtonContent" xml:space="preserve">
    <value>_Отмена</value>
  </data>
  <data name="CommandLineArgumentsLabel" xml:space="preserve">
    <value>Аргументы командной _строки:</value>
  </data>
  <data name="CompareWindowTitle" xml:space="preserve">
    <value>Выберите файлы анализа для сравнения</value>
  </data>
  <data name="ComparisionFileLabel" xml:space="preserve">
    <value>Фа_йл сравнения:</value>
  </data>
  <data name="NodePathLabel" xml:space="preserve">
    <value>Пу_ть к Node:</value>
  </data>
  <data name="OkButtonContent" xml:space="preserve">
    <value>_OK</value>
  </data>
  <data name="OpenProjectButton" xml:space="preserve">
    <value>_Открыть проект</value>
  </data>
  <data name="ProfilingSettingsHeader" xml:space="preserve">
    <value>Что нужно профилировать?</value>
  </data>
  <data name="ProfilingSettingsTitle" xml:space="preserve">
    <value>Параметры профилирования</value>
  </data>
  <data name="ScriptLabel" xml:space="preserve">
    <value>Скр_ипт:</value>
  </data>
  <data name="StandaloneScriptLabel" xml:space="preserve">
    <value>Авт_ономный скрипт</value>
  </data>
  <data name="WorkingDirectoryLabel" xml:space="preserve">
    <value>_Рабочий каталог:</value>
  </data>
</root>
